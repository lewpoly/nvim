local my_colors = {
	-- white = "#d8dee9",
	-- fujiwhite = "#dcd7ba",
	-- fg = "#e5e9f0",
	-- bg = "#232731",
	-- dark_yellow = "#d7ba7d",
	-- yellow = "#ebcb8b",
	-- orange = "#d08770",
	-- light_green = "#b5cea8",
	-- green = "#a3be8c",
	-- red = "#bf616a",
	-- error_red = "#f44747",
	--   violet = "#938aa9",
	-- blue = "#5e81ac",
	-- vivid_blue = "#81a1c1",
	-- light_blue = "#88c0d0",
	-- cyan = "#8fbcbb",
	-- purple = "#b48ead",
}
local overrides = {
	-- String = { fg = my_colors.orange },
	-- Boolean = { fg = my_colors.blue },
	-- Character = { fg = my_colors.orange },
	-- Comment = { fg = my_colors.green, style = "italic" },
	-- Constant = { fg = my_colors.yellow },
	-- Statement = { fg = my_colors.purple },
	-- Keyword = { fg = my_colors.blue },
	-- Float = { fg = my_colors.light_green },
	-- Identifier = { fg = my_colors.blue },
	-- Function = { fg = my_colors.yellow },
	-- Number = { fg = my_colors.light_green },
	-- Conditional = { fg = my_colors.purple },
	-- Repeat = { fg = my_colors.purple },
	-- Label = { fg = my_colors.light_blue },
	-- Operator = { fg = my_colors.purple },
	-- Exception = { fg = my_colors.purple },
	-- PreProc = { fg = my_colors.yellow },
	-- Include = { fg = my_colors.purple },
	-- Define = { fg = my_colors.purple },
	-- Title = { fg = my_colors.cyan },
	-- Macro = { fg = my_colors.purple },
	-- PreCondit = { fg = my_colors.light_blue },
	-- Type = { fg = my_colors.light_blue },
	-- StorageClass = { fg = my_colors.light_blue },
	-- Structure = { fg = my_colors.yellow },
	-- TypeDef = { fg = my_colors.yellow },
	-- Special = { fg = my_colors.blue },
	-- Error = { fg = my_colors.error_red },
	-- Todo = { fg = my_colors.purple },
	-- TSConstMacro = { fg = my_colors.cyan },
	-- TSStringRegex = { fg = my_colors.orange },
	-- TSStringEscape = { fg = my_colors.dark_yellow },
	-- TSString = { fg = my_colors.orange },
	-- TSBoolean = { fg = my_colors.violet, style = "bold" },
	-- TSConstBuiltin = { fg = my_colors.blue },
	-- TSConstant = { fg = my_colors.yellow },
	-- TSFloat = { fg = my_colors.light_green },
	-- TSError = { fg = my_colors.error_red },
	-- TSConditional = { fg = my_colors.purple },
	-- TSRepeat = { fg = my_colors.purple },
	-- TSException = { fg = my_colors.purple },
	-- TSInclude = { fg = my_colors.purple },
	-- TSCharacter = { fg = my_colors.orange },
	-- TSAnnotation = { fg = my_colors.yellow },
	-- TSAttribute = { fg = my_colors.cyan },
	-- TSNamespace = { fg = my_colors.cyan },
	-- TSFuncBuiltin = { fg = my_colors.yellow },
	-- TSFuntion = { fg = my_colors.yellow },
	-- TSFuncMacro = { fg = my_colors.yellow },
	-- TSParameter = { fg = my_colors.light_blue },
	-- TSParameterReference = { fg = my_colors.light_blue },
	-- TSMethod = { fg = my_colors.yellow },
	-- TSField = { fg = my_colors.light_blue },
	-- TSProperty = { fg = my_colors.fujiwhite },
	-- TSConstructor = { fg = my_colors.cyan },
	-- TSLabel = { fg = my_colors.light_blue },
	-- TSKeyword = { fg = my_colors.blue },
	-- TSKeywordFunction = { fg = my_colors.blue },
	-- TSKeywordOperator = { fg = my_colors.blue },
	-- TSOperator = { fg = my_colors.white },
	-- TSType = { fg = my_colors.cyan },
	-- TSTypeBuiltin = { fg = my_colors.blue },
	-- TSVariable = { fg = my_colors.light_blue },
	-- TSVariableBuiltin = { fg = my_colors.light_blue },
}
require("kanagawa").setup({
	overrides = overrides,
	colors = my_colors,
	undercurl = false, -- enable undercurls
	commentStyle = "NONE",
	functionStyle = "NONE",
	keywordStyle = "NONE",
	statementStyle = "NONE",
	typeStyle = "NONE",
	variablebuiltinStyle = "NONE",
	specialReturn = false, -- special highlight for the return keyword
	specialException = false, -- special highlight for exception handling keywords
	transparent = false, -- do not set background color
})

vim.cmd("colorscheme kanagawa")
